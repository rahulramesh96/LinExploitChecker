#!/usr/bin/env python3

import os

# Check for SUID binaries with known vulnerabilities
def check_suid_binaries():
    print("[+] Checking SUID binaries with known vulnerabilities")
    vuln_binaries = {
        "/bin/mount": "https://www.exploit-db.com/exploits/41154",
        "/bin/ping": "https://www.exploit-db.com/exploits/40839",
        "/bin/su": "https://www.exploit-db.com/exploits/39166",
        "/bin/umount": "https://www.exploit-db.com/exploits/42183",
        "/usr/bin/at": "https://www.exploit-db.com/exploits/40812",
        "/usr/bin/chfn": "https://www.exploit-db.com/exploits/16935",
        "/usr/bin/chsh": "https://www.exploit-db.com/exploits/36803",
        "/usr/bin/gpasswd": "https://www.exploit-db.com/exploits/40847",
        "/usr/bin/newgrp": "https://www.exploit-db.com/exploits/47502",
        "/usr/bin/passwd": "https://www.exploit-db.com/exploits/47514",
        "/usr/bin/sudo": "https://www.exploit-db.com/exploits/38759",
        "/usr/bin/Xorg": "https://www.exploit-db.com/exploits/46635",
        "/usr/bin/at-spi2-registryd": "https://www.exploit-db.com/exploits/47691",
        "/usr/lib/policykit-1/polkit-agent-helper-1": "https://www.exploit-db.com/exploits/42275",
        "/usr/lib/openssh/ssh-keysign": "https://www.exploit-db.com/exploits/47519",
    }

    for binary, url in vuln_binaries.items():
        if os.path.exists(binary) and os.stat(binary).st_mode & 0o4000:
            print(f"[-] {binary} has a SUID bit set and is vulnerable to {url}")

# Check for writable directories with sticky bits set
def check_sticky_directories():
    print("[+] Checking for writable directories with sticky bits set")
    results = []
    for root, dirs, files in os.walk("/"):
        for directory in dirs:
            path = os.path.join(root, directory)
            if os.path.isdir(path) and os.stat(path).st_mode & 0o1000 and not os.access(path, os.W_OK):
                results.append(path)

    if len(results) > 0:
        print("[-] The following directories have sticky bits set and are writable only by their owner")
        for result in results:
            print(result)

if __name__ == '__main__':
    check_suid_binaries()
    check_sticky_directories()
